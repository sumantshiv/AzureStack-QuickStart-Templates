{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "adVMSize": {
        "type": "string",
        "allowedValues": [
            "Standard_A1",
            "Standard_A3"
        ],
        "metadata": {
            "description": "The size of the AD VMs Created"
        },
        "defaultValue": "Standard_A1"
    },
    "sqlVMSize": {
        "type": "string",
        "allowedValues": [
            "Standard_A1",
            "Standard_A3"
        ],
        "metadata": {
            "description": "The size of the SQL VMs Created"
        },
        "defaultValue": "Standard_A3"
    },
    "witnessVMSize": {
        "type": "string",
        "allowedValues": [
            "Standard_A1",
            "Standard_A3"
        ],
        "metadata": {
            "description": "The size of the Witness VM Created"
        },
        "defaultValue": "Standard_A1"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
        "metadata": {
            "description": "The SQL Server Service Account name"
        },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service Account password"
      }
    },
    "sqlStorageAccountType": {
        "type": "string",
        "allowedValues": [
            "Standard_LRS"
        ],
        "metadata": {
            "description": "The type of the Sql Server Storage Account created"
        },
        "defaultValue": "Standard_LRS"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "staticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/26"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "10.0.0.5"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Server Internal Load Balancer"
      },
      "defaultValue": "10.0.1.9"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of virtual network to be created"
      },
      "defaultValue": "sqlVNET"
    },
    "templatesBaseUrl": {
        "type": "string",
        "metadata": {
            "description": "Linked Templates base url"
        },
        "defaultValue": "https://raw.githubusercontent.com/sumantshiv/AzureStack-QuickStart-Templates/sqlAlwaysOn1/sql-2016-ha"
    },
    "scriptsBaseUrl": {
        "type": "string",
        "metadata": {
            "description": "DSC Scripts base url"
        },
        "defaultValue": "https://raw.githubusercontent.com/sumantshiv/AzureStack-QuickStart-Templates/sqlAlwaysOn1/sql-2016-ha"
    },
    "sqlServerVersion": {
        "type": "string",
        "allowedValues": [
            "SQL2016SP1-WS2016"
        ],
        "metadata": {
            "description": "The Sql Server Version"
        },
        "defaultValue": "SQL2016SP1-WS2016"
    },
    "numberOfSqlVMDisks": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3",
        "4"
      ],
      "metadata": {
        "description": "The Sql VM Disk Size"
      },
      "defaultValue": "2"
    },
    "loadBalancersType": {
      "type": "string",
      "metadata": {
        "description": "The Sql VM load balancer type"
      },
      "defaultValue": "i"
    }
  },
    "variables": {
        "lbSettings": {
            "rdpLBFE": "rdpLBFE",
            "sqlLBFE": "sqlLBFE",
            "adLBBE": "adLBBE",
            "sqlLBBE": "sqlLBBE",
            "rdpLBName": "rdpLoadBalancer",
            "sqlLBName": "sqlLoadBalancer"
        },
        "subnetNames": {
            "staticSubnetName": "staticSubnet",
            "sqlSubnetName": "sqlSubnet"
        },
        "RDPNAT": "RDP",
        "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
        "primaryDCIPAddressName": "primaryDCIP",
        "backupDCIPAddressName": "backupDCIP",
        "sql1AddressName": "sql1IP",
        "sql0AddressName": "sql0IP",
        "vmSettings": {
            "availabilitySets": {
                "sqlAvailabilitySetName": "sqlAvailabilitySet",
                "adAvailabilitySetName": "adAvailabilitySet"
            },
            "noOfSqlVMs": 2,
            "vmContainerName": "vhds",
            "adPDCVMName": "ad-primary-dc",
            "adBDCVMName": "ad-secondry-dc",
            "sqlVMName": "sqlserver-",
            "sqlwVMName": "cluster-fsw",
            "windowsImagePublisher": "MicrosoftWindowsServer",
            "windowsImageOffer": "WindowsServer",
            "windowsImageSKU": "2016-Datacenter",
            "sqlImagePublisher": "MicrosoftSQLServer",
            "rdpPort": 3389,
            "windowsDiskSize": 128,
            "sqlDiskSize": 128
        },
        "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
        "adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
        "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
        "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkNameWithSuffix'))]",
        "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
        "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
        "ids": {
            "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
            "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
            "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]"
        },
        "derivedIds": {
            "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
            "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
            "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
            "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
            "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
            "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
            "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]"
        },
        "SQL2016SP1-WS2016": "Enterprise",
        "Monday": true,
        "Tuesday": true,
        "Wednesday": true,
        "Thursday": true,
        "Friday": true,
        "Saturday": true,
        "Sunday": true,
        "Never": false,
        "Everyday": true,
        "nsgName": "[concat('Nsg',resourceGroup().name)]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "subnets": [
            {
                "name": "[variables('subnetNames').staticSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('staticSubnet')]",
                    "networkSecurityGroup": {
                        "id": "[variables('nsgID')]"
                    }
                }
            },
            {
                "name": "[variables('subnetNames').sqlSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('sqlSubnet')]",
                    "networkSecurityGroup": {
                        "id": "[variables('nsgID')]"
                    }
                }
            }
        ],
        "sqlStorageAccountName": "[tolower(concat(take(uniqueString(resourceGroup().id),8),'sql'))]",
        "virtualNetworkNameWithSuffix": "[substring(concat(parameters('virtualNetworkName'), uniqueString(variables('sqlStorageAccountName'))),0,15)]",
        "primaryDCIPAddressNameWithSuffix": "[substring(concat(variables('primaryDCIPAddressName'), uniqueString(variables('sqlStorageAccountName'))),0,15)]",
        "backupDCIPAddressNameWithSuffix": "[substring(concat(variables('backupDCIPAddressName'), uniqueString(variables('sqlStorageAccountName'))),0,15)]",
        "sql1AddressNameWithSuffix": "[substring(concat(variables('sql1AddressName'), uniqueString(variables('sqlStorageAccountName'))),0,15)]",
        "sql0AddressNameWithSuffix": "[substring(concat(variables('sql0AddressName'), uniqueString(variables('sqlStorageAccountName'))),0,15)]",
        "dcStorageAccountName": "[concat(substring(concat(variables('sqlStorageAccountName'), uniqueString(variables('sqlStorageAccountName'))),0,18),'dc')]",
        "dcStorageAccountType": "Standard_LRS",
        "configuration": {
            "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/vnet-with-dns-server.json')]",
            "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/nic.json')]",
            "rdpIPAdressSetupURL": "[concat(parameters('templatesBaseUrl'),'/publicip-rdp.json')]",
            "vnetSetupURL": "[concat(parameters('templatesBaseUrl'),'/vnet-new.json')]",
            "setupLBsUrl": "[concat(parameters('templatesBaseUrl'),'/setupLBs-',parameters('loadBalancersType'),'.json')]",
            "creatingNicsUrl": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
            "storageAccountVirtualNetworkPublicIP": "[concat(parameters('templatesBaseUrl'),'/storageAccountVirtualNetworkPublicIP.json')]",
            "provisioningVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningVM',parameters('numberOfSqlVMDisks'),'.json')]",
            "configuringBackupADVM": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json')]",
            "preparingAlwaysOnSqlServer": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json')]",
            "configuringAlwaysOn": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json')]",
            "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip')]",
            "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
            "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADBDC.ps1.zip')]",
            "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
            "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip')]",
            "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
            "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
            "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
            "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip')]",
            "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster"
        }
    },
    "resources": [
        {
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "properties": {
                "securityRules": [
                    {
                        "name": "rule1",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "StorageAccountVirtualNetworkPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics. It will also create the Virtual Network and public IP addresses",
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').storageAccountVirtualNetworkPublicIP]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "sqlStorageAccountName": {
                        "value": "[variables('sqlStorageAccountName')]"
                    },
                    "dcStorageAccountName": {
                        "value": "[variables('dcStorageAccountName')]"
                    },
                    "SqlStorageAccountType": {
                        "value": "[parameters('sqlStorageAccountType')]"
                    },
                    "DcStorageAccountType": {
                        "value": "[variables('dcStorageAccountType')]"
                    },
                    "primaryDCIPAddressNameWithSuffix": {
                        "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
                    },
                    "backupDCIPAddressNameWithSuffix": {
                        "value": "[variables('backupDCIPAddressNameWithSuffix')]"
                    },
                    "sql1AddressNameWithSuffix": {
                        "value": "[variables('sql1AddressNameWithSuffix')]"
                    },
                    "sql0AddressNameWithSuffix": {
                        "value": "[variables('sql0AddressNameWithSuffix')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkNameWithSuffix')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "nsgID": {
                        "value": "[variables('nsgID')]"
                    }
                }
            }
        },
        {
            "name": "LoadBalancers",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "comments": "Create Load Balancers for SQL and DC",
            "dependsOn": [
                "Microsoft.Resources/deployments/StorageAccountVirtualNetworkPublicIP"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').setupLBsUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "sqlLBName": {
                        "value": "[variables('lbSettings').sqlLBName]"
                    },
                    "sqlLBFE": {
                        "value": "[variables('lbSettings').sqlLBFE]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlLBIPAddress')]"
                    },
                    "staticSubnetRef": {
                        "value": "[variables('sqlSubnetRef')]"
                    },
                    "sqlLBBE": {
                        "value": "[variables('lbSettings').sqlLBBE]"
                    },
                    "sqlLBBEID": {
                        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
                    },
                    "sqllbFEConfigID": {
                        "value": "[variables('derivedIds').sqllbFEConfigID]"
                    },
                    "sqllbProbeID": {
                        "value": "[variables('derivedIds').sqllbProbeID]"
                    },
                    "SQLAOProbe": {
                        "value": "[variables('SQLAOProbe')]"
                    }
                }
            }
        },
        {
            "name": "CreatingNetworkInterfaces",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/LoadBalancers"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').creatingNicsUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "adPDCNicName": {
                        "value": "[variables('adPDCNicName')]"
                    },
                    "adPDCNICIPAddress": {
                        "value": "[parameters('adPDCNICIPAddress')]"
                    },
                    "staticSubnetRef": {
                        "value": "[variables('staticSubnetRef')]"
                    },
                    "adBEAddressPoolID": {
                        "value": "[variables('derivedIds').adBEAddressPoolID]"
                    },
                    "adRDPNATRuleID": {
                        "value": "[variables('derivedIds').adRDPNATRuleID]"
                    },
                    "adBDCNicName": {
                        "value": "[variables('adBDCNicName')]"
                    },
                    "adBDCNICIPAddress": {
                        "value": "[parameters('adBDCNICIPAddress')]"
                    },
                    "sqlVMName": {
                        "value": "[variables('vmSettings').sqlVMName]"
                    },
                    "sqlSubnetRef": {
                        "value": "[variables('sqlSubnetRef')]"
                    },
                    "sqlBEAddressPoolID": {
                        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
                    },
                    "sqlwNicName": {
                        "value": "[variables('sqlwNicName')]"
                    },
                    "primaryDCIPAddressNameWithSuffix": {
                        "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
                    },
                    "backupDCIPAddressNameWithSuffix": {
                        "value": "[variables('backupDCIPAddressNameWithSuffix')]"
                    },
                    "sql1AddressNameWithSuffix": {
                        "value": "[variables('sql1AddressNameWithSuffix')]"
                    },
                    "sql0AddressNameWithSuffix": {
                        "value": "[variables('sql0AddressNameWithSuffix')]"
                    },
                    "nsgID": {
                        "value": "[variables('nsgID')]"
                    }
                }
            }
        },
        {
            "name": "ProvisioningVMs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').provisioningVMs]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adPDCVMName": {
                        "value": "[variables('vmSettings').adPDCVMName]"
                    },
                    "adAvailabilitySetName": {
                        "value": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
                    },
                    "sqlAvailabilitySetName": {
                        "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
                    },
                    "sqlStorageAccountName": {
                        "value": "[variables('sqlStorageAccountName')]"
                    },
                    "dcStorageAccountName": {
                        "value": "[variables('dcStorageAccountName')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "adVMSize": {
                        "value": "[parameters('adVMSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adImagePublisher": {
                        "value": "[variables('vmSettings').windowsImagePublisher]"
                    },
                    "adImageOffer": {
                        "value": "[variables('vmSettings').windowsImageOffer]"
                    },
                    "adImageSKU": {
                        "value": "[variables('vmSettings').windowsImageSKU]"
                    },
                    "vmContainerName": {
                        "value": "[variables('vmSettings').vmContainerName]"
                    },
                    "adPDCNicName": {
                        "value": "[variables('adPDCNicName')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adPDCConfigurationFunction": {
                        "value": "[variables('configuration').adPDCConfigurationFunction]"
                    },
                    "adPDCModulesURL": {
                        "value": "[variables('configuration').adPDCModulesURL]"
                    },
                    "adBDCVMName": {
                        "value": "[variables('vmSettings').adBDCVMName]"
                    },
                    "adBDCNicName": {
                        "value": "[variables('adBDCNicName')]"
                    },
                    "sqlVMName": {
                        "value": "[variables('vmSettings').sqlVMName]"
                    },
                    "sqlVMSize": {
                        "value": "[parameters('sqlVMSize')]"
                    },
                    "fswImagePublisher": {
                        "value": "[variables('vmSettings').windowsImagePublisher]"
                    },
                    "fswImageOffer": {
                        "value": "[variables('vmSettings').windowsImageOffer]"
                    },
                    "fswImageSKU": {
                        "value": "[variables('vmSettings').windowsImageSKU]"
                    },
                    "sqlImagePublisher": {
                        "value": "[variables('vmSettings').sqlImagePublisher]"
                    },
                    "sqlImageOffer": {
                        "value": "[parameters('sqlServerVersion')]"
                    },
                    "sqlImageSKU": {
                        "value": "[variables(parameters('sqlServerVersion'))]"
                    },
                    "witnessVMSize": {
                        "value": "[parameters('witnessVMSize')]"
                    },
                    "sqlwVMName": {
                        "value": "[variables('vmSettings').sqlwVMName]"
                    },
                    "sqlwNicName": {
                        "value": "[variables('sqlwNicName')]"
                    }
                }
            }
        },
        {
            "name": "UpdatingDNStoPrimaryADVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/ProvisioningVMs"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkNameWithSuffix')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('adPDCNICIPAddress')]"
                        ]
                    }
                }
            }
        }
    ],
  "outputs": {}
}